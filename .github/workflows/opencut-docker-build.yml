name: OpenCut Docker Build and Push

on:
  schedule:
    # Run daily at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even if no new commits'
        required: false
        default: false
        type: boolean

jobs:
  check-and-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout this repository
      - name: Checkout Docker build repository
        uses: actions/checkout@v4
        with:
          path: docker-repo

      # Step 2: Checkout OpenCut repository
      - name: Checkout OpenCut repository
        uses: actions/checkout@v4
        with:
          repository: OpenCut-app/OpenCut
          ref: main
          path: opencut
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Check for new commits
      - name: Check for new commits
        id: check-commits
        run: |
          cd opencut

          # Get the latest commit SHA
          LATEST_SHA=$(git rev-parse HEAD)
          echo "latest_sha=${LATEST_SHA}" >> $GITHUB_OUTPUT

          # Check if we have a record of the last built commit
          if [ -f "../docker-repo/.last-built-sha" ]; then
            LAST_BUILT_SHA=$(cat ../docker-repo/.last-built-sha)
            echo "Last built SHA: ${LAST_BUILT_SHA}"
            echo "Latest SHA: ${LATEST_SHA}"

            if [ "${LAST_BUILT_SHA}" = "${LATEST_SHA}" ] && [ "${{ github.event.inputs.force_build }}" != "true" ]; then
              echo "No new commits found. Skipping build."
              echo "should_build=false" >> $GITHUB_OUTPUT
            else
              echo "New commits found or force build requested. Proceeding with build."
              echo "should_build=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No previous build record found. Proceeding with build."
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

      # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        if: steps.check-commits.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3

      # Step 5: Login to DockerHub
      - name: Login to DockerHub
        if: steps.check-commits.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 6: Get metadata for tags
      - name: Generate Docker metadata
        if: steps.check-commits.outputs.should_build == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/opencut
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-

      # Step 7: Build and push Docker image
      - name: Build and push Docker image
        if: steps.check-commits.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./opencut
          file: ./opencut/apps/web/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 8: Update last built SHA
      - name: Update last built SHA
        if: steps.check-commits.outputs.should_build == 'true'
        run: |
          echo "${{ steps.check-commits.outputs.latest_sha }}" > docker-repo/.last-built-sha
          cd docker-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .last-built-sha
          git commit -m "Update last built SHA to ${{ steps.check-commits.outputs.latest_sha }}" || echo "No changes to commit"
          git push || echo "No changes to push"

      # Step 9: Summary
      - name: Build Summary
        if: always()
        run: |
          if [ "${{ steps.check-commits.outputs.should_build }}" = "true" ]; then
            echo "## ✅ Docker Image Built and Pushed" >> $GITHUB_STEP_SUMMARY
            echo "- **Repository**: OpenCut-app/OpenCut" >> $GITHUB_STEP_SUMMARY
            echo "- **Commit SHA**: ${{ steps.check-commits.outputs.latest_sha }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Docker Image**: ${{ secrets.DOCKERHUB_USERNAME }}/opencut" >> $GITHUB_STEP_SUMMARY
            echo "- **Tags**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ⏭️ Build Skipped" >> $GITHUB_STEP_SUMMARY
            echo "No new commits found in OpenCut-app/OpenCut repository." >> $GITHUB_STEP_SUMMARY
            echo "- **Latest SHA**: ${{ steps.check-commits.outputs.latest_sha }}" >> $GITHUB_STEP_SUMMARY
          fi