services:
  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: opencut
      POSTGRES_PASSWORD: opencutthegoat
      POSTGRES_DB: opencut
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U opencut"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  serverless-redis-http:
    image: hiett/serverless-redis-http:latest
    ports:
      - "8079:80"
    environment:
      SRH_MODE: env
      SRH_TOKEN: example_token
      SRH_CONNECTION_STRING: "redis://redis:6379"
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://127.0.0.1:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  web:
    # Use pre-built image from Docker Hub
    # Note: Default image has NEXT_PUBLIC_BETTER_AUTH_URL set to http://localhost:3000
    image: developer024/opencut:latest

    # To build locally with custom URL (e.g., port 3100), uncomment below:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     NEXT_PUBLIC_BETTER_AUTH_URL: http://localhost:3100
    #     FREESOUND_CLIENT_ID: ${FREESOUND_CLIENT_ID}
    #     FREESOUND_API_KEY: ${FREESOUND_API_KEY}

    restart: unless-stopped
    ports:
      - "3000:3000" # Must use 3000 for pre-built image (NEXT_PUBLIC_BETTER_AUTH_URL is fixed to localhost:3000)
      # - "3100:3000" # For port 3100, uncomment the build section above and rebuild
    environment:
      # Core Configuration (Required)
      - NODE_ENV=production
      - DATABASE_URL=postgresql://opencut:opencutthegoat@db:5432/opencut

      # Authentication (Required)
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET:-your-production-secret-key-here}
      # Note: NEXT_PUBLIC_BETTER_AUTH_URL is set at build time (see build.args above)

      # Redis Configuration (Required)
      - UPSTASH_REDIS_REST_URL=http://serverless-redis-http:80
      - UPSTASH_REDIS_REST_TOKEN=example_token

      # Freesound Integration (Optional - for audio library)
      # Generate at https://freesound.org/apiv2/apply/
      - FREESOUND_CLIENT_ID=${FREESOUND_CLIENT_ID}
      - FREESOUND_API_KEY=${FREESOUND_API_KEY}

      # Cloudflare R2 Storage (Optional - for auto-captions/transcription)
      # Get from Cloudflare Dashboard > R2 > Manage R2 API tokens
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME:-opencut-transcription}

      # Modal Transcription Service (Optional - for auto-captions)
      # Deploy from apps/transcription/transcription.py
      - MODAL_TRANSCRIPTION_URL=${MODAL_TRANSCRIPTION_URL}

      # Marble CMS (Optional - for blog/content management)
      # Not included by default, add if needed:
      # - MARBLE_WORKSPACE_KEY=${MARBLE_WORKSPACE_KEY}
      # - NEXT_PUBLIC_MARBLE_API_URL=https://api.marblecms.com
    depends_on:
      db:
        condition: service_healthy
      serverless-redis-http:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:

networks:
  default:
    name: opencut-network
